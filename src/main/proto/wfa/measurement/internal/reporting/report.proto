// Copyright 2022 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.reporting;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "wfa/measurement/internal/reporting/metric.proto";

option java_package = "org.wfanet.measurement.internal.reporting";
option java_multiple_files = true;

// Proto representation of the internal Report entity type.
message Report {
  // `MeasurementConsumer` API ID from the kingdom.
  string measurement_consumer_reference_id = 1;
  fixed64 external_report_id = 2;

  message TimeInterval {
    google.protobuf.Timestamp start_time = 1;
    google.protobuf.Timestamp end_time = 2;
  }

  message TimeIntervals {
    repeated TimeInterval time_intervals = 1;
  }

  message PeriodicTimeInterval {
    google.protobuf.Timestamp start_time = 1;
    google.protobuf.Duration increment = 2;
    int32 interval_count = 3;
  }

  oneof time {
    TimeIntervals time_intervals = 3;
    PeriodicTimeInterval periodic_time_interval = 4;
  }

  repeated Metric metrics = 5;

  enum State {
    // Default value. This value is unused.
    STATE_UNSPECIFIED = 0;
    // Computation is running.
    RUNNING = 1;
    // Completed successfully. Terminal state.
    SUCCEEDED = 2;
    // Completed with failure. Terminal state.
    FAILED = 3;
  }
  State state = 6;

  // Result in CSV format.
  string result = 7;

  message Details {
    // Map of `EventGroup` resource name to filter predicate.
    map<string, string> event_group_filters = 1;
  }
  Details details = 8;
}
